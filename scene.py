from manim import *
import math

class Count(Animation):
    def __init__(self, number: DecimalNumber, start: float, end: float, **kwargs) -> None:
        super().__init__(number,  **kwargs)
        self.start = start
        self.end = end

    def interpolate_mobject(self, alpha: float) -> None:
        value = self.start + (alpha * (self.end - self.start))
        self.mobject.set_value(value)


class Project(MovingCameraScene):
    def construct(self):


        ###############
        # BEGIN INTRO #
        ###############


        tgogl1 = Arc(angle=PI/2).set_stroke(GRAY).rotate(PI/2).shift(LEFT)
        tgogl2 = Arc(angle=3*PI/2).set_stroke(GREEN).rotate(PI)
        tgogt = Tex(r'\text{3Green1Gray}').shift(DOWN*2)
        self.play(AnimationGroup(FadeIn(tgogl1), FadeIn(tgogl2)))
        self.play(FadeIn(tgogt))
        self.wait(2)
        self.play(AnimationGroup(FadeOut(tgogl1), FadeOut(tgogl2), FadeOut(tgogt)))


        ################
        # BEGIN PART 1 #
        ################


        p1t = Tex(r'\text{Part 1: The Phases of the Moon and Tides}')
        self.play(FadeIn(p1t))
        self.wait(3)
        self.play(FadeOut(p1t))
        te = Tex(r'\text{Earth}')
        te.scale(0.5)
        tm = Tex(r'\text{Moon}')
        tm.scale(0.2)
        ts = Tex(r'\text{Sun}')
        triangle = Polygon((1, -1, 0), (1, 1, 0), (-3, -1, 0))
        earth = Circle()
        earth.next_to(triangle, DR, buff=-0.5)
        earth.scale(0.5)
        earth.set_stroke(GREEN)
        te.move_to(earth)
        self.play(Create(earth))
        self.play(Write(te))
        moon = Circle()
        moon.next_to(triangle, UR, buff=-0.8)
        moon.scale(0.2)
        moon.set_stroke(GRAY)
        tm.move_to(moon)
        self.play(Create(moon))
        self.play(Write(tm))
        sun = Circle()
        sun.next_to(triangle, LEFT)
        sun.shift(DOWN)
        sun.set_stroke(YELLOW)
        ts.move_to(sun)
        self.play(Create(sun))
        self.play(Write(ts))
        self.wait(2)
        self.play(AnimationGroup(FadeOut(te), FadeOut(tm), FadeOut(ts)))
        self.wait(10)
        sla = Arrow(start=sun.get_center(), end=moon.get_center())
        mls = Sector(outer_radius=0.2, inner_radius=0, angle=PI).rotate(angle=sla.get_angle()+PI/2).move_arc_center_to(moon.get_center()).set_fill(WHITE)
        self.play(AnimationGroup(Write(sla), FadeIn(mls)))
        eva = Arrow(start=earth.get_center(), end=moon.get_center())
        self.play(FadeIn(eva))
        evb = Line(start=ORIGIN, end=RIGHT*0.4).rotate(angle=eva.get_angle()+PI/2).move_to(moon.get_center()).set_stroke(YELLOW)
        self.play(Write(evb))
        wg = ImageMobject('assets/waninggibbous.jpg').to_edge(RIGHT, buff=3)
        wgt = Tex(r'\text{Waning Gibbous}').next_to(wg, DOWN, buff=1)
        self.play(FadeIn(wg))
        self.wait(2)
        self.play(FadeIn(wgt))
        self.wait(6)
        self.play(AnimationGroup(FadeOut(sla), FadeOut(mls), FadeOut(eva), FadeOut(evb), FadeOut(wg), FadeOut(wgt)))
        self.play(AnimationGroup(sun.animate.move_to(LEFT*3), earth.animate.move_to(RIGHT), moon.animate.move_to(RIGHT+UP*2)))
        sega = Arrow(start=earth.get_center()+LEFT, end=sun.get_center()+RIGHT).set_opacity(0.5)
        segt = Tex(r'\text{Gravity}').next_to(sega, DOWN)
        mega = Arrow(start=earth.get_center()+UP/2, end=moon.get_center()+DOWN/4).set_opacity(0.5)
        megt = Tex(r'\text{Gravity}').next_to(mega, RIGHT)
        self.wait(1)
        self.play(AnimationGroup(Write(sega), Write(segt), Write(mega), Write(megt)))
        self.wait(4)
        self.play(AnimationGroup(FadeOut(segt), FadeOut(megt)))
        eo = Circle().scale(0.6).set_stroke(BLUE).move_to(earth)
        eog = Ellipse(width=1.05, height=1.35).set_stroke(BLUE).move_to(earth)
        eosg = Ellipse(width=1.25, height=1.15).set_stroke(RED).move_to(earth)
        self.play(FadeIn(eo))
        self.wait(3)
        self.play(Transform(eo, eog))
        mtt = Tex(r'\text{Tide caused by the Moon}').to_edge(DOWN)
        stt = Tex(r'\text{Tide caused by the Sun}').to_edge(DOWN)
        self.play(Write(mtt))
        self.wait(3)
        self.play(FadeOut(mtt))
        self.add(eog)
        self.add(eo)
        self.play(Transform(eo, eosg))
        self.play(Write(stt))
        self.wait(3)
        self.play(FadeOut(stt))
        self.add(eosg)
        self.remove(eo)
        ct = Tex(r'\text{Tides are cancelling each other}').to_edge(DOWN)
        ctl = Tex(r'\text{Neap Tide, First/Last Quarter Moon}').next_to(ct, UP)
        ht = Tex(r'\text{Tides are pulling with each other}').to_edge(DOWN)
        htl = Tex(r'\text{Spring Tide, Full/New Moon}').next_to(ht, UP)
        self.wait(2)
        self.play(Write(ct))
        self.play(Write(ctl))
        self.wait(5)
        self.play(AnimationGroup(FadeOut(ct), FadeOut(ctl)))
        self.play(AnimationGroup(Rotate(moon, angle=-PI/2, about_point=earth.get_center()), Rotate(eog, angle=-PI/2, about_point=earth.get_center()), Rotate(mega, angle=-PI/2, about_point=earth.get_center())))
        self.wait(5)
        self.play(Write(ht))
        self.play(Write(htl))
        self.wait(4)
        self.play(AnimationGroup(FadeOut(ht), FadeOut(htl)))
        self.wait(10)
        self.play(AnimationGroup(FadeOut(sun), FadeOut(earth), FadeOut(eog), FadeOut(eosg), FadeOut(sega), FadeOut(mega), FadeOut(moon)))


        ################
        # BEGIN PART 2 #
        ################


        p2t = Tex(r'\text{Part 2: The Earth, the Sun, and the Circumference of the Earth}')
        self.play(FadeIn(p2t))
        self.wait(3)
        self.play(FadeOut(p2t))
        te = Tex(r'\text{Earth}')
        te.scale(0.5)
        tm = Tex(r'\text{Moon}')
        tm.scale(0.2)
        ts = Tex(r'\text{Sun}')
        triangle = Polygon((1, -1, 0), (1, 1, 0), (-3, -1, 0))
        earth = Circle()
        earth.next_to(triangle, DR, buff=-0.5)
        earth.scale(0.5)
        earth.set_stroke(GREEN)
        te.move_to(earth)
        self.play(Create(earth))
        self.play(Write(te))
        moon = Circle()
        moon.next_to(triangle, UR, buff=-0.8)
        moon.scale(0.2)
        moon.set_stroke(GRAY)
        tm.move_to(moon)
        self.play(Create(moon))
        self.play(Write(tm))
        sun = Circle()
        sun.next_to(triangle, LEFT)
        sun.shift(DOWN)
        sun.set_stroke(YELLOW)
        ts.move_to(sun)
        self.play(Create(sun))
        self.play(Write(ts))

        self.play(AnimationGroup(FadeOut(sun), FadeOut(moon), FadeOut(te), FadeOut(tm), FadeOut(ts)))
        self.wait(1)
        e2 = Circle().set_stroke(GREEN)
        self.play(Transform(earth, e2))
        arrows = []
        for i in range(6):
            arrows.append(Arrow(start=LEFT*5, end=LEFT*2, color=YELLOW).shift(UP*(i-2.5)))
        arrowinanims = []
        arrowtsroutanims = []
        for arrow in arrows:
            arrowinanims.append(Write(arrow))
            arrowtsroutanims.append(FadeOut(arrow))
        self.wait(5)
        self.play(AnimationGroup(*arrowinanims))
        tsr = Tex(r'\text{Light from the Sun}')
        tsr.move_to(LEFT*3.5)
        self.play(Write(tsr))
        arrowtsroutanims.append(FadeOut(tsr))
        self.play(AnimationGroup(*arrowtsroutanims))
        pole1 = Line(start=LEFT*1.5, end=LEFT)
        self.wait(10)
        self.play(FadeIn(pole1))
        tp1 = Tex(r'\text{Pole that casts no shadow in Syene}')
        tp1.scale(0.4)
        tp1.next_to(pole1, UL)
        tp1.shift(RIGHT*0.75)
        self.play(Write(tp1))
        pole2 = Line(start=LEFT*1.5, end=LEFT)
        tp2 = Tex(r'\text{Pole casting a shadow in Alexandria}')
        tp2.scale(0.4)
        tp2.next_to(pole2, UL)
        tp2.shift(RIGHT*0.75)
        tp2.rotate(-PI/6, about_point=ORIGIN)
        self.add(pole2)
        self.play(Rotate(pole2, -PI/6, about_point=ORIGIN))
        self.play(Write(tp2))
        self.play(AnimationGroup(FadeOut(tp1), FadeOut(tp2), FadeOut(earth), FadeOut(e2), FadeOut(pole1), FadeOut(pole2)))

        earthline = Line(start=config["frame_width"]*LEFT+DOWN, end=config["frame_width"]*RIGHT+DOWN).set_stroke(GREEN)
        pole3 = Line(start=UP*2, end=DOWN)
        self.play(Write(earthline), Write(pole3))
        
        sunray = Line(start=LEFT*(config["frame_height"]-2)/2+UP*config["frame_height"], end=DOWN+3/2*RIGHT).set_stroke(YELLOW)
        self.play(Write(sunray))
        
        a1 = Angle(pole3, sunray)
        self.play(Write(a1))
        number = DecimalNumber()
        number.set_color(WHITE)
        number.scale(0.5)
        number.next_to(a1, LEFT)
        number.add_updater(lambda number: number.next_to(a1, LEFT))
        self.add(number)
        self.play(Count(number, 0, 7.2), run_time=1, rate_func=linear)
        self.wait(2)
        self.play(AnimationGroup(FadeOut(sunray), FadeOut(a1), FadeOut(number), FadeOut(earthline), FadeOut(pole3)))

        self.play(AnimationGroup(FadeIn(pole2), FadeIn(e2), FadeIn(pole1)))
        r1 = Line(start=pole1.get_end(), end=ORIGIN)
        r2 = Line(start=pole2.get_end(), end=ORIGIN)
        self.wait(3)
        self.play(AnimationGroup(Write(r1), Write(r2)))

        a2 = Angle(r1, Line(start=ORIGIN, end=pole2.get_end()), radius=0.3, quadrant=(-1,1), other_angle=True)
        ta2 = Tex(r'$7.20^{\circ}$')
        ta2.scale(0.4)
        ta2.next_to(a2, UL)
        ta2.shift(DOWN*0.3)
        self.play(AnimationGroup(Write(a2), Write(ta2)))

        distarc = Arc(radius=1, start_angle=5*PI/6, angle=PI/6).set_stroke(RED)
        tda = Tex(r'$500\text{ miles}$').scale(0.4).next_to(distarc, LEFT)
        self.play(Write(distarc))
        self.play(Write(tda))
        self.wait(2)
        self.play(AnimationGroup(FadeOut(e2), FadeOut(distarc), FadeOut(tda), FadeOut(pole1), FadeOut(pole2), FadeOut(r1), FadeOut(r2), FadeOut(a2), FadeOut(ta2)))

        circumtex1 = MathTex(r'{{500}} \text{ miles} / ({{x}} \text{ miles})  =  {{7.2}} ^{\circ}  {{360}} ^{\circ}')
        circumtex2 = MathTex(r'{{500}}/{{x}} = {{7.2}}/{{360}}')
        circumtex3 = MathTex('{{7.2}} {{x}} = {{500}} \cdot {{360}}')  
        circumtex4 = MathTex('{{7.2}} {{x}} = {{180000}}')
        circumtex5 = MathTex(r'{{x}} = {{180000}}/{{7.2}}')
        circumtex6 = MathTex('{{x}} = {{25000}}')
        self.play(FadeIn(circumtex1))
        self.wait(1)
        self.play(TransformMatchingTex(circumtex1, circumtex2))
        self.wait(1)
        self.play(TransformMatchingTex(circumtex2, circumtex3))
        self.wait(1)
        self.play(TransformMatchingTex(circumtex3, circumtex4))
        self.wait(1)
        self.play(TransformMatchingTex(circumtex4, circumtex5))
        self.wait(1)
        self.play(TransformMatchingTex(circumtex5, circumtex6))
        self.add(circumtex6)
        self.remove(circumtex1, circumtex2, circumtex3, circumtex4, circumtex5)
        self.wait(5)
        reec = MathTex(r'24901 \text{ miles}').shift(DOWN)
        self.play(AnimationGroup(circumtex6.animate.shift(UP), FadeIn(reec)))
        self.wait(1)
        self.play(AnimationGroup(FadeOut(circumtex6), FadeOut(reec)))
        clickystuffs = Tex(r'\text{Clicky Stuffs}').scale(1.5).to_edge(UP, buff=MED_LARGE_BUFF)
        tc1 = ImageMobject('assets/taucreature1.png').scale(0.3).next_to(clickystuffs, LEFT)
        tc2 = ImageMobject('assets/taucreature2.png').scale(0.3).next_to(clickystuffs, RIGHT)
        funded = Tex(r'\text{Funded by YOUR MOM, visit potato2017.github.io/3g1gYOURMOMYOURMOM to learn more}').scale(0.5)
        self.play(AnimationGroup(FadeIn(clickystuffs), FadeIn(tc1), FadeIn(tc2), FadeIn(funded)))
        self.wait(10)